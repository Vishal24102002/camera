import cv2
import numpy as np
cam=cv2.VideoCapture(0)
cam.set(3,400)
cam.set(4,500)
while(True):
    sucess,real=cam.read()
    ref=cv2.GaussianBlur(real,(7,7),1)
    
    img=cv2.cvtColor(ref,cv2.COLOR_BGR2GRAY)
    ret,img_binary1=cv2.threshold(img,50,255,cv2.THRESH_BINARY+cv2.THRESH_OTSU)
    
    img_binary=cv2.dilate(img_binary1,None,iterations=1)
    
    contours,hierarchy=cv2.findContours(img_binary,mode=cv2.RETR_TREE, method=cv2.CHAIN_APPROX_NONE)
    print("length of contours{}".format(len(contours)))
    ref_copy=ref.copy()
    for contour in contours:
        (x,y,w,h)=cv2.boundingRect(contour)
        print("area=",cv2.contourArea(contour))
        if cv2.contourArea(contour)<700:
            continue
        else:
            print("break")
            cam.release()
            cv2.destroyAllWindows()
        ref_copy=cv2.rectangle(ref_copy,(x,y),(x+w,y+h),(0,255,0),1)
    ref_copy=cv2.drawContours(ref_copy,contours,-1,(0,0,255),thickness=2,lineType=cv2.LINE_AA)
    #ref_stack= stackimages(0.8,([img,ref,ref_copy]))
    cv2.imshow("contours",ref_copy)
    if cv2.waitKey(1)& 0xFF==ord('q'):
        break
cam.release()
cv2.destroyAllWindows()
